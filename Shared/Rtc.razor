@implements IAsyncDisposable
@layout MainLayout
@inject WebRtcService RtcService;
@inject IJSRuntime Js

<PageTitle>Audio & video chat</PageTitle>



<section id="stream__container">

    <div id="stream__box"></div>

    <div id="streams__container">

        @* <div class="video__container video-player" id="user-container-localVideo">
                <video id="localVideo" autoplay playsinline muted></video>
        </div> *@

        @*
        <div class="video__container video-player" id="user-container-2"
             style="width: 100%; height: 100%; border-radius: 50%; object-fit: cover;">
                <video id="remoteVideo" autoplay playsinline></video>
        </div>
       

        <div class="video__container" id="user-container-3">
            <h1>3</h1>
        </div>

        <div class="video__container" id="user-container-4">
            <h1>4</h1>
        </div> *@

    </div>

    <div class="stream__actions">
        <button id="camera-btn" class="active" @onclick="@(async () => await ToggleCamera())">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M5 4h-3v-1h3v1zm10.93 0l.812 1.219c.743 1.115 1.987 1.781 3.328 1.781h1.93v13h-20v-13h3.93c1.341 0 2.585-.666 3.328-1.781l.812-1.219h5.86zm1.07-2h-8l-1.406 2.109c-.371.557-.995.891-1.664.891h-5.93v17h24v-17h-3.93c-.669 0-1.293-.334-1.664-.891l-1.406-2.109zm-11 8c0-.552-.447-1-1-1s-1 .448-1 1 .447 1 1 1 1-.448 1-1zm7 0c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3 1.346-3 3-3zm0-2c-2.761 0-5 2.239-5 5s2.239 5 5 5 5-2.239 5-5-2.239-5-5-5z" /></svg>
        </button>
        <button id="mic-btn" class="active" @onclick="@(async () => await ToggleMic())">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M12 2c1.103 0 2 .897 2 2v7c0 1.103-.897 2-2 2s-2-.897-2-2v-7c0-1.103.897-2 2-2zm0-2c-2.209 0-4 1.791-4 4v7c0 2.209 1.791 4 4 4s4-1.791 4-4v-7c0-2.209-1.791-4-4-4zm8 9v2c0 4.418-3.582 8-8 8s-8-3.582-8-8v-2h2v2c0 3.309 2.691 6 6 6s6-2.691 6-6v-2h2zm-7 13v-2h-2v2h-4v2h10v-2h-4z" /></svg>
        </button>
        <button id="screen-btn">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M0 1v17h24v-17h-24zm22 15h-20v-13h20v13zm-6.599 4l2.599 3h-12l2.599-3h6.802z" /></svg>
        </button>
        <button id="leave-btn" style="background-color: #FF5050;" @onclick="@(async () => await ToggleCall())">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M16 10v-5l8 7-8 7v-5h-8v-4h8zm-16-8v20h14v-2h-12v-16h12v-2h-14z" /></svg>
        </button>
    </div>
</section>



@* <div id="videos">
    <video class="video-player" id="localVideo" autoplay playsinline muted></video>
    <video class="video-player" id="remoteVideo" autoplay playsinline></video>
</div> *@

@* <div id="controls">
    <div class="control-container" id="camera-btn" @onclick="@(async () => await ToggleCamera())">
        <img src="icons/camera.png" />
    </div>

    <div class="control-container" id="mic-btn" @onclick="@(async () => await ToggleMic())">
        <img src="icons/mic.png" />
    </div>

    <div class="control-container" id="leave-btn" @onclick="@(async () => await ToggleCall())">
        <img src="icons/phone.png" />
    </div>

</div> *@




@code {
    private IJSObjectReference? _module;
    private bool _callDisabled = true;

    [Parameter]
    public string ParentGameId { get; set; } = String.Empty;

    [Parameter]
    public int GameId { get; set; } = default;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _module = await Js.InvokeAsync<IJSObjectReference>(
                "import", "./Shared/Rtc.razor.js");
        }
        await StartAction();
        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task StartAction()
    {
        if (String.IsNullOrWhiteSpace(ParentGameId))
            return;

        if (_module == null)
            throw new InvalidOperationException();

        RtcService.OnRemoteStreamAcquired += RtcOnRemoteStreamAcquired;
        await RtcService.Join(ParentGameId);
        var stream = await RtcService.StartLocalStream();
        await _module.InvokeVoidAsync("setLocalStream", stream, GameId);
        _callDisabled = true;
    }

    private async void RtcOnRemoteStreamAcquired(object? obj, IJSObjectReference e) 
    {
        if (_module == null)
            throw new InvalidOperationException();
        await _module.InvokeVoidAsync("setRemoteStream", e);
        await _module.InvokeVoidAsync("addEventListenerForVideoFrames");
        StateHasChanged();
    }

    private async Task CallAction()
    {
        await RtcService.Call();
    }

    private async Task HangupAction() //функция прекращения звонка
    {
        //TODO: по клике на кнопку камера и микрофон не отключаются!!!
        if (_module == null)
            throw new InvalidOperationException();

        await _module.InvokeVoidAsync("stopRemoteStream");
        await _module.InvokeVoidAsync("stopLocalStream");
        await _module.InvokeVoidAsync("hideBlockRemoteVideo");
        await RtcService.Hangup();
        _callDisabled = true;
    }

    private async Task ToggleCamera()
    {
        await RtcService.ToggleCamera();
    }

    private async Task ToggleMic()
    {
        await RtcService.ToggleMic();
    }

    private async Task ToggleCall()
    {
        if (_callDisabled)
            await CallAction();
        else
            await HangupAction();

        await RtcService.ToggleCall();
    }

    public async ValueTask DisposeAsync()
    {
        //TODO: если пользователь уходит со страницы сайта, камера работает дальше. Как выключить?
        //если он пытается присоединиться к тому же чату после серфинга по сайту, получает ошибку -
        //его картинка черная, не происходит привязка потока к элементу на странице

        //TODO: проверить, console.log("Ending call."); выполняется один раз или разобраться, 
        //когда срабатывает DisposeAsync()
        await RtcService.Hangup();
    }
}